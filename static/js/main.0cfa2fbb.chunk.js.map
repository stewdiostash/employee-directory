{"version":3,"sources":["components/Header.js","components/Searchbar.js","utils/API.js","components/TableRow.js","components/TableFrame.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Searchbar","handleFilter","type","placeholder","onChange","event","axios","get","TableRow","employees","console","log","undefined","name","map","picture","phone","email","dob","login","src","thumbnail","alt","first","last","date","substr","uuid","TableFrame","state","filteredEmployees","isAscending","target","value","filter","filteredList","item","Object","values","join","toLowerCase","indexOf","setState","handleSort","ascendingOrder","sort","a","b","API","then","res","data","results","this","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cfa2fbb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"my-5\">\n      <p className=\"is-size-2\">Employee Directory</p>\n      <p className=\"is-size-5\">Use the search bar to narrow your results</p>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Searchbar = ({ handleFilter }) => {\n  return (\n    <div className=\"field my-5\">\n      <div className=\"control\">\n        <input\n          className=\"container input is-medium\"\n          type=\"text\"\n          placeholder=\"Find an employee\"\n          onChange={(event) => handleFilter(event)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Searchbar;\n","import axios from \"axios\";\n\nconst URL = \"https://randomuser.me/api/?nat=US&results=500\";\n\nexport default {\n  search: function () {\n    return axios.get(URL);\n  },\n};\n","import React from \"react\";\n\nconst TableRow = ({ employees }) => {\n  console.log({ employees });\n  return (\n    <tbody>\n      {employees[0] !== undefined && employees[0].name !== undefined ? (\n        employees.map(({ name, picture, phone, email, dob, login }) => {\n          return (\n            <tr key={login.uuid} className=\"is-vcentered\">\n              <td>\n                <img\n                  src={picture.thumbnail}\n                  alt={`${name.first} ${name.last}`}\n                />\n              </td>\n              <td>\n                {name.first} {name.last}\n              </td>\n              <td>{phone}</td>\n              <td>{email}</td>\n              <td>{dob.date.substr(0, 10)}</td>\n            </tr>\n          );\n        })\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n};\n\nexport default TableRow;\n","import React, { Component } from \"react\";\nimport Searchbar from \"./Searchbar\";\n// import TableRow from \"./TableRow\";\nimport API from \"../utils/API\";\nimport TableRow from \"./TableRow\";\n// import axios from \"axios\";\n\nclass TableFrame extends Component {\n  state = {\n    employees: [{}],\n    filteredEmployees: [{}],\n    isAscending: true,\n  };\n\n  componentDidMount() {\n    API.search().then((res) =>\n      this.setState({\n        employees: res.data.results,\n        filteredEmployees: res.data.results,\n      })\n    );\n  }\n\n  handleFilter = (event) => {\n    console.log(event.target.value);\n    const filter = event.target.value;\n    const filteredList = this.state.employees.filter((item) => {\n      let values = Object.values(item).join(\"\").toLowerCase();\n      // console.log(values);\n      return values.indexOf(filter.toLowerCase()) !== -1;\n    });\n    this.setState({\n      filteredEmployees: filteredList,\n    });\n  };\n\n  handleSort = () => {\n    const compare = (a, b) => {\n      if (this.state.isAscending) {\n        if (a.name.first > b.name.first) return 1;\n        if (a.name.first < b.name.first) return -1;\n        return 0;\n      } else {\n        if (a.name.first < b.name.first) return 1;\n        if (a.name.first > b.name.first) return -1;\n        return 0;\n      }\n    };\n    const ascendingOrder = this.state.employees.sort(compare);\n    console.log(ascendingOrder);\n    this.setState({\n      isAscending: !this.state.isAscending,\n      filteredEmployees: ascendingOrder,\n    });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <Searchbar handleFilter={this.handleFilter} />\n\n        <div className=\" columns is-centered my-5\">\n          <table className=\"container table\">\n            <thead>\n              <tr>\n                <th>Image</th>\n                <th onClick={this.handleSort}>Name</th>\n                <th>Phone</th>\n                <th>Email</th>\n                <th>DOB</th>\n              </tr>\n            </thead>\n            <TableRow employees={this.state.filteredEmployees} />\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TableFrame;\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport TableFrame from \"./components/TableFrame\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TableFrame />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bulma/css/bulma.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}